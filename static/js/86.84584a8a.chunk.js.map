{"version":3,"file":"static/js/86.84584a8a.chunk.js","mappings":"wNAEaA,EAAY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAClBC,EACND,EADMC,YAAaC,EACnBF,EADmBE,MAAOC,EAC1BH,EAD0BG,aAAcC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,SAAUC,EAChEN,EADgEM,OAGlE,OACE,4BACE,gBAAKC,IAAG,yCAAoCN,GAAeO,IAAKN,KAChE,4BACE,kCAAQA,EAAR,cAAmBC,EAAaM,MAAM,EAAG,GAAzC,QACA,6CAAmBC,KAAKC,MAAqB,GAAfP,GAA9B,QACA,4BACE,sCACA,uBAAIC,QAEN,4BACE,oCACA,uBAAIC,EAAOM,KAAI,SAAAC,GAAK,gBAAOA,EAAMC,KAAb,kBAK7B,E,kBCtBD,EAAyB,6BAAzB,EAAmE,iCAAnE,EAAwH,wCCgDxH,EA1CqB,WAAO,IAAD,IACzB,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOf,EAAP,KAAqBgB,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaL,GAASM,KAAKP,EAC5B,GAAE,CAACC,IAEJ,IAAMO,GAAkBC,EAAAA,EAAAA,QAAM,oBAACN,EAASO,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAEvD,OACE,gBAAKC,UAAWC,EAAhB,SACG7B,IACC,iCACE,gBAAK4B,UAAWC,EAAhB,UACE,SAAC,KAAD,CAASD,UAAWC,EAAgBC,GAAIN,EAAgBO,QAAxD,wBAKF,4BACE,SAAChC,EAAD,CAAWC,aAAcA,KACzB,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAM8B,GAAE,kBAAab,EAAb,SAAR,qBAEF,yBACE,SAAC,KAAD,CAAMa,GAAE,kBAAab,EAAb,YAAR,8BAIN,SAAC,KAAD,WAMX,C","sources":["components/MovieInfo/MovieInfo.jsx","webpack://react-homework-template/./src/Pages/MovieDetails/MovieDetails.module.css?f582","Pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { PropTypes } from 'prop-types';\n\nexport const MovieInfo = ({ movieDetails }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movieDetails;\n\n  return (\n    <div>\n      <img src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt={title} />\n      <div>\n        <h2>{`${title}  (${release_date.slice(0, 4)})`}</h2>\n        <p>{`User score: ${Math.round(vote_average * 10)}%`}</p>\n        <div>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n        </div>\n        <div>\n          <h3>Genres</h3>\n          <p>{genres.map(genre => `${genre.name} `)}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMovieInfo.propTypes = {\n  movieDetails: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.array,\n  }),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetails_button__9VA3h\",\"buttonLink\":\"MovieDetails_buttonLink__3rnF9\",\"MovieDetailsThumb\":\"MovieDetails_MovieDetailsThumb__l-OJh\",\"active\":\"MovieDetails_active__xGTn0\"};","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Link, NavLink } from 'react-router-dom';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { useState, useEffect, useRef } from 'react';\nimport { getMovieById } from 'Services/api';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieById(movieId).then(setMovieDetails);\n  }, [movieId]);\n\n  const currentLocation = useRef(location.state?.from ?? '/');\n\n  return (\n    <div className={css.MovieDetailsThumb}>\n      {movieDetails && (\n        <>\n          <div className={css.button}>\n            <NavLink className={css.buttonLink} to={currentLocation.current}>\n              Go back\n            </NavLink>\n          </div>\n\n          <div>\n            <MovieInfo movieDetails={movieDetails} />\n            <div>\n              <h2>Additional information</h2>\n              <ul>\n                <li>\n                  <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n                </li>\n                <li>\n                  <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n                </li>\n              </ul>\n            </div>\n            <Outlet />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MovieInfo","movieDetails","poster_path","title","release_date","vote_average","overview","genres","src","alt","slice","Math","round","map","genre","name","useState","setMovieDetails","movieId","useParams","location","useLocation","useEffect","getMovieById","then","currentLocation","useRef","state","from","className","css","to","current"],"sourceRoot":""}